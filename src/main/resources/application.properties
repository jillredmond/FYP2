## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/studentdb?useSSL=false

spring.mvc.view.suffix=.jsp
spring.jpa.show-sql=false
spring.messages.basename=validation
spring.datasource.username = root
spring.datasource.password = root


spring.session.store-type=redis

spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update



spring.thymeleaf.mode=LEGACYHTML5

spring.mvc.view.prefix: /
spring.mvc.view.suffix: .jsp


#Google Calendar API Configuration
google.client.client-id=686045931865-00dtsj5ceoelf7pi7f1f4verdfrgd6o7.apps.googleusercontent.com
google.client.client-secret=zUHVCQr9TAky8JhpZ5Bwg83t
google.client.access-token-uri=https://www.googleapis.com/oauth2/v3/token
google.client.user-authorization-uri=https://accounts.google.com/o/oauth2/auth?access_type=offline&prompt=consent
google.client.client-authentication-scheme=query
google.client.scope=profile,email,https://www.googleapis.com/auth/calendar
google.resource.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
google.resource.prefer-token-info=true
google.client.redirectUri=http://localhost:9000/login/google


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB